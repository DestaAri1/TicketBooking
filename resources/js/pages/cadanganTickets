// import { PlaceholderPattern } from '@/components/ui/placeholder-pattern';
import AppLayout from '@/layouts/app-layout';
import { BreadcrumbItem, Ticket as Tickets } from '@/types';
import { Head, Link } from '@inertiajs/react';
import { Calendar, CirclePlus, Clock, MapPin, MoreHorizontal, Music } from 'lucide-react';
import { useState } from 'react';

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: 'Ticket',
        href: '/dashboard/ticket',
    },
];

export default function Ticket() {
    const sampleTickets: Tickets[] = [
    {
        id: 1,
        title: 'Summer Music Festival',
        artist: 'Various Artists',
        date: '20 Jun 2025',
        time: '16:00',
        venue: 'Grand Park Arena',
        price: 850000,
        imageUrl: '/api/placeholder/600/800',
    },
    {
        id: 2,
        title: 'Rock Sensation Concert',
        artist: 'The Amplifiers',
        date: '15 Jul 2025',
        time: '19:30',
        venue: 'Echo Stadium',
        price: 750000,
        imageUrl: '/api/placeholder/600/800',
    },
    {
        id: 3,
        title: 'Classical Symphony Night',
        artist: 'Metropolitan Orchestra',
        date: '5 Aug 2025',
        time: '20:00',
        venue: 'Royal Concert Hall',
        price: 1200000,
        imageUrl: '/api/placeholder/600/800',
    },
    {
        id: 4,
        title: 'Jazz & Blues Evening',
        artist: 'Smooth Tones Quartet',
        date: '25 Aug 2025',
        time: '21:00',
        venue: 'Blue Note Lounge',
        price: 550000,
        imageUrl: '/api/placeholder/600/800',
    },
    {
        id: 5,
        title: 'Electronic Dance Experience',
        artist: 'DJ Pulse',
        date: '10 Sep 2025',
        time: '22:00',
        venue: 'Neon Club',
        price: 450000,
        imageUrl: '/api/placeholder/600/800',
    },
    {
        id: 6,
        title: 'Indie Folk Collective',
        artist: 'Woodland Echoes',
        date: '28 Sep 2025',
        time: '18:30',
        venue: 'Garden Amphitheater',
        price: 350000,
        imageUrl: '/api/placeholder/600/800',
    },
];
  const [view, setView] = useState<'grid' | 'list'>('grid');
  const [selectedCategory, setSelectedCategory] = useState<string>('All');

  // Categories could be dynamically generated based on your data
  const categories = ['All', 'Upcoming', 'Past', 'Featured'];

  return (
    <AppLayout breadcrumbs={breadcrumbs}>
      <Head title="Ticket" />

      {/* Header section with actions */}
      <div className="mb-6 flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between">
        <div className="space-y-1">
          <h1 className="text-2xl font-bold tracking-tight text-gray-900">Ticket Collection</h1>
          <p className="text-sm text-gray-500">Manage and view your available concert tickets</p>
        </div>

        <div className="flex items-center gap-3">
          {/* View toggle buttons */}
          <div className="hidden rounded-lg border border-gray-200 bg-white shadow-sm md:flex">
            <button
              onClick={() => setView('grid')}
              className={`flex items-center rounded-l-lg px-3 py-1.5 text-sm font-medium transition-colors ${
                view === 'grid' ? 'bg-purple-100 text-purple-700' : 'text-gray-600 hover:bg-gray-50'
              }`}
            >
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-1.5">
                <rect x="3" y="3" width="7" height="7" />
                <rect x="14" y="3" width="7" height="7" />
                <rect x="3" y="14" width="7" height="7" />
                <rect x="14" y="14" width="7" height="7" />
              </svg>
              Grid
            </button>
            <button
              onClick={() => setView('list')}
              className={`flex items-center rounded-r-lg px-3 py-1.5 text-sm font-medium transition-colors ${
                view === 'list' ? 'bg-purple-100 text-purple-700' : 'text-gray-600 hover:bg-gray-50'
              }`}
            >
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="mr-1.5">
                <line x1="8" y1="6" x2="21" y2="6" />
                <line x1="8" y1="12" x2="21" y2="12" />
                <line x1="8" y1="18" x2="21" y2="18" />
                <line x1="3" y1="6" x2="3.01" y2="6" />
                <line x1="3" y1="12" x2="3.01" y2="12" />
                <line x1="3" y1="18" x2="3.01" y2="18" />
              </svg>
              List
            </button>
          </div>

          <Link
            href="/dashboard/ticket/add-ticket"
            className="inline-flex items-center justify-center rounded-lg bg-gradient-to-r from-purple-600 to-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm transition-all duration-300 hover:from-purple-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2"
          >
            <CirclePlus className="mr-1.5 h-4 w-4" />
            Add Ticket
          </Link>
        </div>
      </div>

      {/* Category filter tabs */}
      <div className="mb-6 overflow-x-auto">
        <div className="inline-flex rounded-lg border border-gray-200 bg-white p-1 shadow-sm">
          {categories.map((category) => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}
              className={`whitespace-nowrap rounded-md px-4 py-2 text-sm font-medium transition-colors ${
                selectedCategory === category
                  ? 'bg-gradient-to-r from-purple-500 to-indigo-500 text-white shadow-sm'
                  : 'text-gray-700 hover:bg-gray-100'
              }`}
            >
              {category}
            </button>
          ))}
        </div>
      </div>

      {/* Empty state */}
      {sampleTickets.length === 0 && (
        <div className="flex h-64 flex-col items-center justify-center rounded-xl border border-dashed border-gray-300 bg-gray-50 py-12">
          <div className="flex h-16 w-16 items-center justify-center rounded-full bg-purple-100">
            <Music className="h-8 w-8 text-purple-600" />
          </div>
          <h3 className="mt-4 text-lg font-medium text-gray-900">No tickets found</h3>
          <p className="mt-1 text-sm text-gray-500">Get started by creating your first ticket.</p>
          <Link
            href="/dashboard/ticket/add-ticket"
            className="mt-4 inline-flex items-center rounded-lg bg-purple-600 px-4 py-2 text-sm font-medium text-white hover:bg-purple-700"
          >
            <CirclePlus className="mr-1.5 h-4 w-4" />
            Add New Ticket
          </Link>
        </div>
      )}

      {/* Grid view */}
      {view === 'grid' && sampleTickets.length > 0 && (
        <div className="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {sampleTickets.map((ticket) => (
            <div
              key={ticket.id}
              className="group relative overflow-hidden rounded-xl border border-gray-200 bg-white shadow-sm transition-all duration-300 hover:border-purple-200 hover:shadow-md"
            >
              {/* Ticket image */}
              <div className="relative aspect-[3/4] bg-gray-100">
                <img
                  src={ticket.imageUrl}
                  alt={ticket.title}
                  className="h-full w-full object-cover object-center"
                />

                {/* Gradient overlay */}
                <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-black/5"></div>

                {/* Ticket info */}
                <div className="absolute inset-x-0 bottom-0 p-4">
                  <p className="text-xs font-medium uppercase tracking-wider text-purple-200">{ticket.artist}</p>
                  <h3 className="mt-1 truncate text-lg font-bold text-white">{ticket.title}</h3>
                </div>

                {/* Actions overlay - appears on hover */}
                <div className="absolute inset-0 flex items-center justify-center bg-black/40 opacity-0 backdrop-blur-sm transition-opacity duration-300 group-hover:opacity-100">
                  <div className="flex gap-2">
                    <Link
                      href={`/dashboard/ticket/edit/${ticket.id}`}
                      className="rounded-lg bg-white/90 px-3 py-2 text-sm font-medium text-gray-800 transition-colors hover:bg-white"
                    >
                      Edit
                    </Link>
                    <Link
                      href={`/dashboard/ticket/view/${ticket.id}`}
                      className="rounded-lg bg-purple-600/90 px-3 py-2 text-sm font-medium text-white transition-colors hover:bg-purple-600"
                    >
                      View
                    </Link>
                  </div>
                </div>
              </div>

              {/* Ticket details */}
              <div className="p-4">
                <div className="flex flex-wrap gap-2 text-xs">
                  <div className="inline-flex items-center rounded-full bg-purple-50 px-2.5 py-0.5 text-purple-700">
                    <Calendar className="mr-1 h-3 w-3" />
                    {ticket.date}
                  </div>
                  <div className="inline-flex items-center rounded-full bg-indigo-50 px-2.5 py-0.5 text-indigo-700">
                    <Clock className="mr-1 h-3 w-3" />
                    {ticket.time}
                  </div>
                </div>

                <div className="mt-2 flex items-center text-sm text-gray-500">
                  <MapPin className="mr-1 h-3 w-3 flex-shrink-0" />
                  <span className="truncate">{ticket.venue}</span>
                </div>

                <div className="mt-3 flex items-center justify-between">
                  <p className="text-lg font-bold text-gray-900">
                    Rp {ticket.price.toLocaleString('id-ID')}
                  </p>
                  <button className="rounded-full p-1 text-gray-400 hover:bg-gray-100 hover:text-gray-600">
                    <MoreHorizontal className="h-5 w-5" />
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* List view */}
      {view === 'list' && sampleTickets.length > 0 && (
        <div className="overflow-hidden rounded-xl border border-gray-200 bg-white shadow">
          <ul className="divide-y divide-gray-200">
            {sampleTickets.map((ticket) => (
              <li key={ticket.id} className="group transition-colors hover:bg-purple-50">
                <div className="flex items-center p-4 sm:px-6">
                  {/* Thumbnail */}
                  <div className="relative h-16 w-12 flex-shrink-0 overflow-hidden rounded-md bg-gray-100 sm:h-20 sm:w-16">
                    <img
                      src={ticket.imageUrl}
                      alt={ticket.title}
                      className="h-full w-full object-cover object-center"
                    />
                  </div>

                  {/* Information */}
                  <div className="ml-4 flex-1">
                    <div className="flex items-center justify-between">
                      <div>
                        <h3 className="font-medium text-gray-900">{ticket.title}</h3>
                        <p className="text-sm text-purple-600">{ticket.artist}</p>
                      </div>
                      <p className="font-bold text-gray-900">
                        Rp {ticket.price.toLocaleString('id-ID')}
                      </p>
                    </div>

                    <div className="mt-1 flex flex-wrap items-center gap-x-4 gap-y-1 text-xs text-gray-500">
                      <div className="flex items-center">
                        <Calendar className="mr-1 h-3 w-3" />
                        {ticket.date}
                      </div>
                      <div className="flex items-center">
                        <Clock className="mr-1 h-3 w-3" />
                        {ticket.time}
                      </div>
                      <div className="flex items-center">
                        <MapPin className="mr-1 h-3 w-3" />
                        {ticket.venue}
                      </div>
                    </div>
                  </div>

                  {/* Actions */}
                  <div className="ml-4 flex flex-shrink-0 items-center space-x-2">
                    <Link
                      href={`/dashboard/ticket/view/${ticket.id}`}
                      className="rounded-lg bg-purple-100 px-3 py-1 text-xs font-medium text-purple-700 transition-colors hover:bg-purple-200"
                    >
                      View
                    </Link>
                    <Link
                      href={`/dashboard/ticket/edit/${ticket.id}`}
                      className="rounded-lg bg-gray-100 px-3 py-1 text-xs font-medium text-gray-700 transition-colors hover:bg-gray-200"
                    >
                      Edit
                    </Link>
                  </div>
                </div>
              </li>
            ))}
          </ul>
        </div>
      )}

      {/* Pagination */}
      {sampleTickets.length > 0 && (
        <div className="mt-6 flex items-center justify-between">
          <div className="text-sm text-gray-500">
            Showing <span className="font-medium">1</span> to <span className="font-medium">{sampleTickets.length}</span> of{" "}
            <span className="font-medium">{sampleTickets.length}</span> tickets
          </div>
          <div className="flex items-center space-x-2">
            <button
              className="inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:cursor-not-allowed disabled:opacity-50"
              disabled
            >
              Previous
            </button>
            <button
              className="inline-flex items-center rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:cursor-not-allowed disabled:opacity-50"
              disabled
            >
              Next
            </button>
          </div>
        </div>
      )}
    </AppLayout>
  );
}
